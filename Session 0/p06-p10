#project euler 7

def is_prime(n):
    if n <= 1:
        return False
    for i in range(2, int(n ** 0.5) + 1):
        if n % i == 0:
            return False
    return True

def nth_prime(n):
    count = 0
    num = 2
    while count < n:
        if is_prime(num):
            count += 1
        num += 1
    return num - 1

# Finding the 10001st prime number
print(nth_prime(10001))



#project euler 9

for i in range (1,1000):
    for k in range(1,i):
        n=(((i**2)+(k**2))**0.5)
        if n==round(n):
            if n+i+k==1000:
                print(i*k*n)
                break
        



#project euler 10

n=int(input())
no=[]
for i in range(2,n+1):
    prime=True
    for k in range (2,int(i**0.5)+1):
        if i%k==0:
            prime=False
            break
    if prime:
        no.append(i)
print(sum(no))



#project euler 06
def sum_square_difference(n):
     sum1=0
     sum2=0
     for i in range(1,n+1):
         sum1+=i**2
         sum2+=i
     else:
         print(sum2**2-sum1) 
sum_square_difference(100)
    